Process this file with autoconf to produce a configure script.

AC_INIT(autopoweroff, 2.0.0, hans@deragon.biz)
AM_INIT_AUTOMAKE(autopoweroff, 2.0.0)
AC_REVISION($Revision: 1.4 $)
AC_COPYRIGHT([Hans Deragon, Copyright 2003-2007, under the GPL 2.0 license.])

INSTALLTYPE=""
INSTALLICON=0

REDHATCOMPATIBLE=0
SUSECOMPATIBLE=0

if [[ -f /etc/fedora-release ]]; then
  REDHATCOMPATIBLE=1
  echo "Fedora distribution detected."
elif [[ -f /etc/redhat-release ]]; then
  REDHATCOMPATIBLE=1
  echo "Red Hat distribution detected."
elif [[ -f /etc/mandrake-release ]]; then
  REDHATCOMPATIBLE=1
  echo "Mandrake distribution detected."
elif [[ -f /etc/SuSE-release ]]; then
  SUSECOMPATIBLE=1
  echo "SuSE distribution detected."
elif [[ -f /etc/lsb-release ]]; then
  . /etc/lsb-release
  if [ "${DISTRIB_ID}" = "Ubuntu" ]; then
    UBUNTUCOMPATIBLE=1
    echo "Ubuntu distribution detected."
  fi
else
  echo "SOFT WARNING:  distribution unknown, but this should not be a problem."
fi

# AC_ARG_ENABLE(
#  [install-spreaded],
#  [
#   --enable-install-spreaded
# 
#      Installs most files under the same directory hierarchy, but
#      configuration files, desktop files and other are moved to 
#      their respective directories to be enabled.  For instance,
#      the configuration file will be installed under /etc.
# 
#      This option is recommended.
#  ],
#  [INSTALLTYPE="SPREADED"]
# )
# 
# AC_ARG_ENABLE(
#  [install-same-dir],
#  [
#   --enable-install-same-dir (default)
# 
#      Installs every files under the same directory hierarchy.  This
#      includes configuration and destkop files.  If you choose this
#      option, you will have to manually complete the installation.
#  ],
#  [INSTALLTYPE="SAMEDIR"]
# )
 
AC_ARG_ENABLE(
 [install-for-rpm],
 [
  --enable-install-for-rpm

     Installs all files under the same directory hierarchy, but
     some files are configured to point to resources outside
     the directory.  This option should not be used by the users.
     This option is only available for the mecanism used to
     build an RPM version of the software.

     Please avoid calling configure with this option.
 ],
 [INSTALLTYPE="RPM"]
)

AC_ARG_ENABLE(
 [install-icon],
 [
  --enable-install-icon

     If enabled and the directory of the window manager is found, it
     will attempt to install the autopoweroff icon in a menu.
 ],
 [INSTALLICON=1]
)

function testprg
{
  variable=$1
  progname=$2
  if test "${variable}" == "not found"; then
    AC_MSG_ERROR("Autopoweroff requires ${progname} to be installed.")
  fi
}

# Checks for programs.
AC_PROG_INSTALL
AC_CHECK_PROG([PYTHON],   [python],   [found], [not found])
testprg "${PYTHON}" "python"
AC_CHECK_PROG([POWEROFF], [poweroff], [found], [not found])
testprg "${POWEROFF}" "poweroff "
AC_CHECK_PROG([PING],     [ping],     [found], [not found])
testprg "${PING}" "ping"
AC_CHECK_PROG([PERL],   [perl],   [found], [not found])
testprg "${PERL}" "perl"
# gnome-config is not required.  If not found, we assume that gnome is
# non existant.
AC_CHECK_PROG([GNOMECONFIG],   [gnome-config],   [found], [not found])
AC_PATH_PROG([consolehelperpath], [consolehelper], [not found])

# Following lines are for testing purposes and thus are put into
# comment.
#AC_CHECK_PROG([JUNK],   [ajunk],   [found], [notfound])
#testprg "${JUNK}" "ajunk"

#echo prefix=$prefix

test "x$prefix" = xNONE && prefix=$ac_default_prefix

if ((${SUSECOMPATIBLE})); then
  autopoweroff_rpm_requirements="python, iputils, sysvinit"
else
  autopoweroff_rpm_requirements="python, iputils, SysVinit"
fi

if [[ "${INSTALLTYPE}" = "RPM" ]]; then
  echo "Autopoweroff:  configure called for RPM building."

  exec_prefix='${prefix}/usr'

  autopoweroff_sharedir="/usr/share/autopoweroff"
  autopoweroff_etcdir="/etc"
  autopoweroff_etccrondir="${autopoweroff_etcdir}/cron.d"
  autopoweroff_crondir="${autopoweroff_sharedir}/cron"
  autopoweroff_bindir="/usr/bin"
  autopoweroff_sbindir="/usr/sbin"
  autopoweroff_vardir="/var"
  autopoweroff_logdir=${autopoweroff_vardir}/log
  autopoweroff_ctrldir="${autopoweroff_vardir}/autopoweroff"
  autopoweroff_initdir="${autopoweroff_etcdir}/rc.d/init.d"

else

  # Need to copy these test here since we need $prefix and $exec_prefix
  # to be set earlier than configure would normaly do.  These variables
  # must be set before the eval executed below.
  test "x$prefix"      = xNONE && prefix=$ac_default_prefix
  test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

  # Expanding used variables that can be interpreted by a Python script.
  # If we use @sysconfdir@ directly in a Python script, @sysconfdir@ would be
  # replaced with ${prefix}/share, which is wrong.  ${prefix} cannot be
  # evaluated in a Python script.  However, @sysconfdir_expanded@ will be
  # replaced with "/usr/share" for example.
  eval "eval datadir=$datadir"
  eval "eval sbindir=$sbindir"
  eval "eval bindir=$bindir"
  eval "eval sysconfdir=$sysconfdir"
  #eval "eval localstatedir=$localstatedir"

  autopoweroff_sharedir="${datadir}"
  autopoweroff_etcdir=${sysconfdir}
  autopoweroff_etccrondir=${autopoweroff_etcdir}/cron.d
  autopoweroff_crondir=${autopoweroff_sharedir}/cron
  autopoweroff_vardir=${autopoweroff_sharedir}/var
  autopoweroff_logdir=${autopoweroff_sharedir}/log
  autopoweroff_ctrldir="${autopoweroff_vardir}"
  autopoweroff_bindir=${bindir}
  autopoweroff_sbindir=${sbindir}
  autopoweroff_initdir=${sysconfdir}/rc.d/init.d
fi

if [[ "${prefix}" = "NONE" -a "${GNOMECONFIG}" = "found" ]]; then
  autopoweroff_desktopdir=`gnome-config --datadir`
elif (( ${INSTALLICON} )) || [[ "${INSTALLTYPE}" == "RPM" ]]; then
  if [[  -d /usr/share/applications ]]; then
    autopoweroff_desktopdir="${prefix}/usr/share/applications"
  fi
fi

if [[ -z "${autopoweroff_desktopdir}" ]]; then
  autopoweroff_desktopdir="${autopoweroff_sharedir}/applications"
fi

# if [[ "${INSTALLTYPE}" = "RPM" ]]; then
#   datadir="/usr/share/autopoweroff"
#   autopoweroff_desktopdir="${datadir}/applications"
#   sysconfdir="/etc"
# fi

# Expanding used variables that can be interpreted by a Python script.
# If we use @sysconfdir@ directly in a Python script, @sysconfdir@ would be
# replaced with ${prefix}/share, which is wrong.  ${prefix} cannot be
# evaluated in a Python script.  However, @sysconfdir_expanded@ will be
# replaced with "/usr/share" for example.
eval "eval sysconfdir_expanded=$sysconfdir"
#eval "eval autopoweroff_desktopdir_expanded=$autopoweroff_desktopdir"
#eval "eval datadir_expanded=$datadir"
#etcdir="${sysconfdir_expanded}"

# Setting production tag to true, so that generated executables are using
# real production settings instead of test settings.
production=true

initdir=${sysconfdir_expanded}/rc.d/init.d

gnome_appldir=${autopoweroff_desktopdir}/applications

cat << EOF
Gnome desktop entries will be copied under ${gnome_appldir}
autopoweroff.conf will be copied under ${autopoweroff_etcdir}
EOF

# Setup

ARCH=noarch

AC_CONFIG_FILES([ \
  Makefile \
  autopoweroff.spec \
  sbin/autopoweroffd \
  sbin/autopoweroff \
  sbin/autopoweroff_upgrade \
  sbin/autopoweroff_uninstall \
  etc/security/console.apps/autopoweroff \
  etc/rc.d/init.d/autopoweroff \
  python/modules/auconfig.py \
  desktop/autopoweroff.desktop \
  apoinstall \
  ])

INSTALL=apoinstall
#AC_SUBST(datadir_expanded)
#AC_SUBST(sysconfdir_expanded)
AC_SUBST(ARCH)
AC_SUBST(gnome_appldir)
AC_SUBST(initdir)
AC_SUBST(consolehelperpath)
AC_SUBST(INSTALLTYPE)
AC_SUBST(production)
AC_SUBST(autopoweroff_sharedir)
AC_SUBST(autopoweroff_etcdir)
AC_SUBST(autopoweroff_etccrondir)
AC_SUBST(autopoweroff_crondir)
AC_SUBST(autopoweroff_vardir)
AC_SUBST(autopoweroff_logdir)
AC_SUBST(autopoweroff_ctrldir)
AC_SUBST(autopoweroff_bindir)
AC_SUBST(autopoweroff_sbindir)
AC_SUBST(autopoweroff_initdir)
AC_SUBST(autopoweroff_desktopdir)
AC_SUBST(autopoweroff_rpm_requirements)
AC_SUBST(INSTALL)

AC_OUTPUT

chmod a+x \
  sbin/autopoweroffd \
  sbin/autopoweroff \
  sbin/autopoweroff_uninstall \
  sbin/autopoweroff_upgrade \
  etc/rc.d/init.d/autopoweroff \
  apoinstall
