#!/bin/bash

bindir="NotSetup"
sbindir=@autopoweroff_sbindir@
datadir=@autopoweroff_sharedir@
pixmapsdir=@pixmapsdir@
desktopdir=@desktopdir@
initdir=@autopoweroff_initdir@
etcdir=@autopoweroff_etcdir@
sharedir=@autopoweroff_sharedir@

version=@version@

function uninstall
{
  path=$1
  # If ${warning} is set to false, no warning will be printed.  When
  # it is normal for some file to be non existant, you can call this function
  # with "false" as the second parameter and the warning will not be printed
  # if the file is missing.
  warning=$2

  if [ -e "$path" -o -L "$path" ]; then
    if [ -f "$path" -o -L "$path" ]; then
      echo Uninstalling ${path}
      /bin/rm -f ${path}
    else
      #echo Uninstalling directory ${path}
      /bin/rmdir -p ${path} >/dev/null 2>&1
    fi
  else
    if [ "${warning}" != "false" ]; then
      cat << EOF
  Warning:  ${path} does not exist.
            It seams that it has already been removed.
EOF
    fi
  fi
}


cat <<EOF
You have two options:

1) Keep a copy of the configuration file autopoweroff.conf.
2) Delete all traces of Autopoweroff, including configuration files.
q) Quit
  
Select [1], [2] or [q].
EOF

WHILEDONE="no"
while [[ "${WHILEDONE}" = "no" ]]; do
  read -s -n 1 OPTION
  if [[ "${OPTION}" = "1" ]]; then
    echo autpoweroff.conf will not be deleted.
    WHILEDONE="yes"
  elif [[ "${OPTION}" = "2" ]]; then
    echo Any trace of Autopoweroff will be removed, including autpoweroff.conf.
    WHILEDONE="yes"
  elif [[ "${OPTION}" = "q" ]]; then
    echo Aborting.
    exit
  fi
done

# Uninstalling files
uninstall ${sbindir}/autopoweroff
uninstall ${bindir}/autopoweroff_cfg false # This is a link to consolehelper.
uninstall ${sbindir}/autopoweroff_cfg
uninstall ${sbindir}/autopoweroff_upg_cfg
uninstall ${pixmapsdir}/autopoweroff.png
uninstall ${desktopdir}/autopoweroff.desktop
uninstall ${datadir}/doc/autopoweroff-${version}/index.html
uninstall ${datadir}/doc/autopoweroff-${version}/style.css
uninstall ${datadir}/doc/autopoweroff-${version}/COPYING
uninstall ${initdir}/autopoweroff
uninstall ${sharedir}/python/modules/auconfig.py
uninstall ${sharedir}/python/modules/auconfig.pyc false
uninstall ${gladedir}/autopoweroff.glade
uninstall ${gladedir}/autopoweroff.png
uninstall ${sbindir}/autopoweroff_uninstall
uninstall ${etcdir}/security/console.apps/autopoweroff_cfg false
uninstall ${etcdir}/pam.d/autopoweroff_cfg false

if [ ${OPTION} = "2" ]; then
  uninstall ${etcdir}/autopoweroff.conf
fi

# Uninstalling directories, if applicable.
uninstall ${bindir}
uninstall ${sbindir}
uninstall ${datadir}/doc/autopoweroff-${version}
uninstall ${gnome_datadir}/pixmaps
uninstall ${initdir}
uninstall ${gnome_appldir}
uninstall ${sharedir}/glade
uninstall ${sharedir}/python/modules
uninstall ${etcdir}/security/console.apps false
uninstall ${etcdir}/pam.d false

if [ ${OPTION} = "2" ]; then
  uninstall ${etcdir} false
fi

echo "Autopoweroff is now uninstalled."
